inner_join(
map_dept@data %>% mutate(id = rownames(.)), by = 'id'
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group)) +
coord_equal()
xlim <- ggplot_build(ggobj)$layout$panel_ranges[[1]]$x.range
ylim <- ggplot_build(ggobj)$layout$panel_ranges[[1]]$y.range
inset_frame <- data_frame(xmin = xlim[1], xmax = xlim[2], ymin = ylim[1], ymax = ylim[2])
p2 <-
ggplot(map_shps$adm1) +
geom_polygon(aes(long, lat, group = group), col = 'black', fill = 'lightgrey', size = .1) +
geom_rect(
data = inset_frame, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
alpha = 0, colour = 'black', size = .5, linetype = 2
) +
coord_equal() +
theme_bw() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
)
p2
ggplot(map_shps$adm1) +
geom_polygon(aes(long, lat, group = group), col = 'black', fill = 'lightgrey', size = .1) +
geom_rect(
data = inset_frame, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
alpha = 0, colour = 'lightgreen', size = .5, linetype = 2
) +
coord_equal() +
theme_bw() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
)
ggplot(map_shps$adm1) +
geom_polygon(aes(long, lat, group = group), col = 'black', fill = 'lightgrey', size = .1) +
geom_rect(
data = inset_frame, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
alpha = 0, colour = 'darkred', size = .5, linetype = 2
) +
coord_equal() +
theme_bw() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
)
p2 <-
ggplot(map_shps$adm1) +
geom_polygon(aes(long, lat, group = group), col = 'black', fill = 'lightgrey', size = .1) +
geom_rect(
data = inset_frame, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
alpha = 0, colour = 'darkred', size = .5, linetype = 2
) +
coord_equal() +
theme_bw() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
tmp$data_map
dept
list(hti_adm3)
list(tmp$data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR)
inset_map <- list(tmp$data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR)
ggsave(inset_map)
?ggsave
ggsave('inset_map_func')
ggsave('inset_map_func', device = 'pdf')
ggsave('inset_map.pdf', plot = inset_map, device = 'pdf')
inset_map
inset_map
png(file = "inset_map.png", w = 2400, h = 1800, res = 300)
inset_map
dev.off()
png(file = "inset_map.png", w = 2400, h = 1800, res = 300)
list(tmp$data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR)
dev.off()
xx <- list(tmp$data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR)
xx
DisplayResult('xx')
DisplayResult
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune')
)
df_nested %>% mutate(map = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR))
df_nested %<>% mutate(map = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR))
df_nested
DisplayResult('map')
theme_report
map_shps$adm1
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
# map = map(data_map, MakeMapAR)
map_main = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested
df_nested$map_inset
DisplayResult('map_main')
DisplayResult('map_inset')
p1 <- DisplayResult('map_main')
p2 <- DisplayResult('map_inset')
png(file = "inset_map.png", w = 2400, h = 1800, res = 300)
grid::grid.newpage()
v1 <- grid::viewport(width = 1, height = 1, x = 0.5, y = 0.5) # plot area for the main map
v2 <- grid::viewport(width = 0.4, height = 0.3, x = 0.7, y = 0.8) # plot area for the inset map
print(p1, vp = v1)
print(p2, vp = v2)
dev.off()
png(file = "inset_map.png", w = 2400, h = 1800, res = 300)
grid::grid.newpage()
v1 <- grid::viewport(width = 1, height = 1, x = 0.5, y = 0.5) # plot area for the main map
v2 <- grid::viewport(width = 0.4, height = 0.3, x = 0.7, y = 0.8) # plot area for the inset map
DisplayResult('map_main') %>% print(vp = v1)
DisplayResult('map_inset') %>% print(vp = v2)
dev.off()
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_depts
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
# map = map(data_map, MakeMapAR)
map_main = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapAR),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested
df_nested$map_inset
grid::grid.newpage()
v1 <- grid::viewport(width = 1, height = 1, x = 0.5, y = 0.5) # plot area for the main map
v2 <- grid::viewport(width = 0.4, height = 0.3, x = 0.7, y = 0.8) # plot area for the inset map
DisplayResult('map_main') %>% print(vp = v1)
DisplayResult('map_main')[[2]]
df_nested
df_nested$data_map
list_depts
map_shps
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
test[['test']] <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
test <- list()
test[['test']] <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
test
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
map_shps <- list()
map_shps$adm1 <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
map_shps
png(file = "inset_map.png", w = 2400, h = 1800, res = 300)
v1 <- grid::viewport(width = 1, height = 1, x = 0.5, y = 0.5) # plot area for the main map
v2 <- grid::viewport(width = 0.4, height = 0.3, x = 0.7, y = 0.8) # plot area for the inset map
DisplayResult('map_main') %>% print(vp = v1)
DisplayResult('map_inset') %>% print(vp = v2)
dev.off()
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('functions.R')
list_db_paths <- dir('data', full.names = TRUE)
list_depts <- 'DSGA'
load('map/maps.RData')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
map_shps <- map(c(hti_adm1, hti_adm3), PrepareMapData) %>% set_names(c('adm1', 'adm3'))
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested
df_nested$epicurve_by_week_inst
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested$epicurve_by_week_inst
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested$epicurve_by_week_inst
?scale_fill_discrete
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges)
)
map(df_nested$data, PlotHistWeekInst)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_nested$data, PlotHistWeekInst)
map(df_nested$data, PlotHistWeekInst) + theme(legend.position = 'right')
tmp <- map(df_nested$data, PlotHistWeekInst)
tmp
tmp[[1]]
tmp[[1]] + theme(legend.position = 'right')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
tmp[[1]] + theme(legend.position = 'right')
tmp <- map(df_nested$data, PlotHistWeekInst)
tmp[[1]] + theme(legend.position = 'right')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
tmp <- map(df_nested$data, PlotHistWeekInst)
dat
dat %>%
filter(!inst %in% exclude$inst)
dat[[commune]] <- forcats::fct_inorder(dat[[commune]])
dat$commune
forcats::fct_inorder(dat$commune)
dat$commune <- forcats::fct_inorder(dat$commune)
dat
forcats::fct_inorder(dat$inst)
dat <-
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value))
dat$inst <- forcats::fct_inorder(dat$inst)
dat
dat$inst
exclude <-
dat %>%
group_by(inst) %>%
summarise(value = sum(value)) %>%
filter(value == 0) %>%
c
dat %>%
filter(!inst %in% exclude$inst) %>%
ggplot() +
geom_col(aes(x = epiweek, y = value, fill = commune)) +
scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(9, colour_scheme))(length(unique(dat$commune)))) +
facet_wrap(~ inst) +
labs(x = 'Epiweek 2016', y = '# cases') +
theme_report +
theme(legend.position = 'none')
dat %>%
filter(!inst %in% exclude$inst) %>%
ggplot() +
geom_col(aes(x = epiweek, y = value, fill = commune)) +
scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(9, colour_scheme))(length(unique(dat$commune)))) +
facet_wrap(~ inst) +
labs(x = 'Epiweek 2016', y = '# cases') +
theme_report
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_nested$data, PlotHistWeekInst)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_nested$data, PlotHistWeekInst)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_nested$data, PlotHistWeekInst)
tufte::newthought('On 4 October, Hurricane Matthew')
?tufte::newthought
tufte::newthought('On 4 October, Hurricane Matthew')
df
df_nested
dat_raw
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_depts %>%
map(WrangleData)
dat_raw
load('map/maps.RData')
source('functions.R')
list_db_paths <- dir('data', full.names = TRUE)
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_depts <- 'DSGA'
map_shps <- map(c(hti_adm1, hti_adm3), PrepareMapData) %>% set_names(c('adm1', 'adm3'))
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
