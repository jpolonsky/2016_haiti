epitable = map(data, MakeTable))
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
spread(key, value)
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value))
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
spread(key, value)
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
filter(value > 0)
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
filter(value > 0) %>%
spread(key, value)
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
spread(key, value) %>%
filter(cas_vus > 0)
spread
?spread
source('~/OneDrive/who/projects/2016_haiti/functions.R')
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
filter(value > 0) %>%
spread(key, value, fill = 0)
data %>%
filter(!key == 'cas_hosp') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
group_by(commune, inst, key) %>%
summarise(value = sum(value)) %>%
filter(value > 0) %>%
spread(key, value, fill = 0) %>% data.frame()
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
load('map/maps.RData')
source('functions.R')
list_db_paths <- dir('data', full.names = TRUE)
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_depts <- 'DSGA'
map_shps <- map(c(hti_adm1, hti_adm3), PrepareMapData) %>% set_names(c('adm1', 'adm3'))
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
?element_text
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested
df_nested$epicurve_by_week_inst
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
df_nested$epicurve_by_week_inst
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
# data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# # data_map = map2(data, dept, WrangleDataMapPopAR),
# data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# # table
# epitable = map(data, MakeTable),
# # plots
# ## epicurves
# epicurve_by_day_all = map(data, PlotHistDay),
# epicurve_by_week_all = map(data, PlotHistWeek),
# epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst)
)
data
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value)) %>%
mutate(inst = stringr::str_wrap(inst, width = 60))
source('~/OneDrive/who/projects/2016_haiti/functions.R')
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
mutate(inst = stringr::str_wrap(inst, width = 60))
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
mutate(inst = stringr::str_wrap(inst, width = 15))
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
mutate(inst = stringr::str_wrap(inst, width = 15)) %>% data.frame()
dat <-
data %>%
filter(key == 'cas_vus') %>%
ungroup() %>%
mutate(inst = ifelse(inst == 'UTC', paste(inst, commune), inst)) %>%
mutate(epiweek = epitools::as.week(date)[['week']]) %>%
group_by(commune, inst, epiweek, key) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
mutate(inst = stringr::str_wrap(inst, width = 15))
dat$inst <- forcats::fct_inorder(dat$inst)
exclude <-
dat %>%
group_by(inst) %>%
summarise(value = sum(value)) %>%
filter(value == 0) %>%
c
dat %>%
filter(!inst %in% exclude$inst) %>%
ggplot() +
geom_col(aes(x = epiweek, y = value, fill = commune), colour = 'black', size = .25) +
scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(9, colour_scheme))(length(unique(dat$commune)))) +
facet_wrap(~ inst) +
labs(x = 'Epiweek 2016', y = '# cases') +
theme_report +
theme(legend.position = 'bottom', legend.title.align = 0.5) +
guides(fill = guide_legend(title.position = 'top'))
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
# data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# # data_map = map2(data, dept, WrangleDataMapPopAR),
# data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# # table
# epitable = map(data, MakeTable),
# # plots
# ## epicurves
# epicurve_by_day_all = map(data, PlotHistDay),
# epicurve_by_week_all = map(data, PlotHistWeek),
# epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst)
)
dat %>%
filter(!inst %in% exclude$inst) %>%
ggplot() +
geom_col(aes(x = epiweek, y = value, fill = commune), colour = 'black', size = .25) +
scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(9, colour_scheme))(length(unique(dat$commune)))) +
facet_wrap(~ inst) +
labs(x = 'Epiweek 2016', y = '# cases') +
theme_report +
theme(
legend.position = 'bottom',
legend.title.align = 0.5,
strip.text = element_text(margin(t = 0, r = 0, b = 0, l = 0, unit = "pt"))
) +
guides(fill = guide_legend(title.position = 'top'))
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
15+7.5
27.5-22.5
?knitr::write_bib
load('map/maps.RData')
source('functions.R')
list_depts <- 'DSGA'
map_shps <- map(c(hti_adm1, hti_adm3), PrepareMapData) %>% set_names(c('adm1', 'adm3'))
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
list_db_paths <- dir('data', full.names = TRUE)
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
# data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# # data_map = map2(data, dept, WrangleDataMapPopAR),
# data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# # table
# epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay)
)
data
data$date %>% min()
data$date %>% max()
data %>%
filter(key %in% 'cas_vus') %>%
group_by(date) %>%
summarise(value = sum(value))
data %>%
filter(key %in% 'cas_vus') %>%
group_by(date) %>%
summarise(value = sum(value)) %>% tail
data %>%
filter(key %in% 'cas_vus') %>%
group_by(date) %>%
summarise(value = sum(value)) %>%
ggplot() +
geom_col(aes(x = date, y = value)) +
geom_text(
data =
data %>%
filter(key %in% 'cas_vus') %>%
group_by(date) %>%
summarise(total = sum(value)),
aes(x = date, y = total + max(total)/50, label = total), size = 1
)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('functions.R')
list_depts <- 'DSGA'
map_shps <- map(c(hti_adm1, hti_adm3), PrepareMapData) %>% set_names(c('adm1', 'adm3'))
df_nested <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# data_map = map2(data, dept, WrangleDataMapPopAR),
data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# table
epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay),
epicurve_by_week_all = map(data, PlotHistWeek),
epicurve_by_week_commune = map(data, PlotHistWeekCommune),
epicurve_by_week_inst = map(data, PlotHistWeekInst),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune'),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune'),
## map
map_main = list(data_map, dept = dept, df_map = list(hti_adm3), key = 'ar') %>% pmap(MakeMapMain),
map_inset = list(data_map, dept = dept, df_map = list(hti_adm3)) %>% pmap(MakeMapInset)
)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
PlotHistDay
tmp <-
list_depts %>%
map(WrangleData) %>%
set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges),
# data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus'),
# # data_map = map2(data, dept, WrangleDataMapPopAR),
# data_map = list(data, dept = dept, df_map = list(map_shps$adm3)) %>% pmap(WrangleDataMapPopAR),
# # table
# epitable = map(data, MakeTable),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistWeek)
)
tmp$epicurve_by_day_all
install.packages("bookdown")
install.packages("DT")
cat('\\begin{figure*}\n\\includegraphics[]{annex/investigation_protocole.pdf}\n\\end{figure*}')
