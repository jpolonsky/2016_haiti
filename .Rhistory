fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
WrangleDataMapPopAR(df_nested$data[[1]])
df_commune_sheets
data$dept
data
dept
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4)
df_commune_sheets$sheet
df_commune_sheets$commune
df_commune_sheets$commune == unique(data$dept)
df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)]
df_commune_sheets$commune
?map2
WrangleDataMapPopAR <- function(data = NULL, dept = NULL) {
browser()
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
df_nested$data
df_nested$dept
WrangleDataMapPopAR(df_nested$data[[1]], dept = dept)
dept
WrangleDataMapPopAR <- function(data = NULL, dept = NULL) {
browser()
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
WrangleDataMapPopAR(df_nested$data[[1]], dept = dept)
dept
df_nested$dept[[1]]
df_nested$data[[1]]
WrangleDataMapPopAR(df_nested$data[[1]], dept = df_nested$dept[[1]])
dept
data
dat
WrangleDataMapPopAR(df_nested$data, dept = df_nested$dept)
WrangleDataMapPopAR <- function(data = NULL, dept = NULL) {
# browser()
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
WrangleDataMapPopAR(df_nested$data[[1]], dept = df_nested$dept[[1]])
WrangleDataMapPopAR(df_nested$data, dept = df_nested$dept)
WrangleDataMapPopAR <- function(data = NULL, dept = NULL) {
browser()
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
WrangleDataMapPopAR(df_nested$data, dept = df_nested$dept)
data
dept
df_map_haiti
WrangleDataMapPopAR <- function(data = NULL, dept = NULL) {
# browser()
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(value)) %>%
full_join(
read_excel(
'data/population.xlsx',
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
df_nested
df_nested %>%
mutate(
data_map = map(data, WrangleDataMapPopAR, dept = dept)
)
df_nested
df_nested %>%
mutate(
data_map = map2(data, dept = dept, WrangleDataMapPopAR)
)
df_nested %>%
mutate(
data_map = map2(data, dept = dept, .f = WrangleDataMapPopAR)
)
df_nested %>%
mutate(
data_map = map2(data, dept, .f = WrangleDataMapPopAR)
)
df_nested %>%
mutate(
data_map = pmap(data, dept, .f = WrangleDataMapPopAR)
)
df_nested %>%
mutate(
data_map = pmap(data, dept, WrangleDataMapPopAR)
)
tmp <- df_nested %>%
mutate(
data_map = map2(data, dept, WrangleDataMapPopAR)
)
tmp
tmp$data_map
MakeMapAR
tmp <-
df_nested %>%
mutate(
data_map = map2(data, dept, WrangleDataMapPopAR),
map = map(data_map, MakeMapAR)
)
tmp
tmp$map
dir('data', full.names = TRUE)
df_nested
df_nested$epicurve_by_day_all
list_depts
df_nested$epicurve_by_day_all[[list_depts]]
df_nested$epicurve_by_day_all[['DSGA']]
df_nested
list_depts %>%
map(WrangleData) %>%
# set_names(list_depts) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age)
df_nested <-
list_depts %>%
map(WrangleData) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
set_names(list_depts)
df_nested
df_nested <-
list_depts %>%
map(WrangleData) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges) %>% set_names(list_depts),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus')%>% set_names(list_depts),
data_map = map2(data, dept, WrangleDataMapPopAR) %>% set_names(list_depts)
)
df_nested
df_nested$data
system.time(df_nested <-
list_depts %>%
map(WrangleData) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges) %>% set_names(list_depts),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus') %>% set_names(list_depts),
data_map = map2(data, dept, WrangleDataMapPopAR) %>% set_names(list_depts),
# table
epitable = map(data, MakeTable) %>% set_names(list_depts),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay) %>% set_names(list_depts),
epicurve_by_week_all = map(data, PlotHistWeek) %>% set_names(list_depts),
epicurve_by_week_commune = map(data, PlotHistWeekCommune) %>% set_names(list_depts),
epicurve_by_week_inst = map(data, PlotHistWeekInst) %>% set_names(list_depts),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune') %>% set_names(list_depts),
bar_cases__by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune') %>% set_names(list_depts),
## map
map = map(data_map, MakeMapAR) %>% set_names(list_depts)
))
df_nested
df_nested$map
df_nested$epicurve_by_day_all$DSGA
[[list_depts]]
list_depts
df_nested$epicurve_by_day_all[[list_depts]]
list_depts
df_nested$epicurve_by_day_all[['DSGA']]
df_nested
df_nested$data[[list_depts]]$date
df_nested$data$DSGA$date
df_nested$map
df_nested$bar_cases_by_commune
df_nested$bar_cases__by_commune
source('functions.R')
list_depts <- params$dep_san
list_db_paths <- dir('data', full.names = TRUE)
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_depts
df_nested <-
list_depts %>%
map(WrangleData) %>%
bind_rows() %>%
nest(-c(dept), .key = data_by_age) %>%
mutate(
# data sets
data = map(data_by_age, MergeAges) %>% set_names(list_depts),
data_pie = map(data_by_age, WrangleDataPie, variable = 'cas_vus') %>% set_names(list_depts),
data_map = map2(data, dept, WrangleDataMapPopAR) %>% set_names(list_depts),
# table
epitable = map(data, MakeTable) %>% set_names(list_depts),
# plots
## epicurves
epicurve_by_day_all = map(data, PlotHistDay) %>% set_names(list_depts),
# epicurve_by_week_all = map(data, PlotHistWeek) %>% set_names(list_depts),
epicurve_by_week_commune = map(data, PlotHistWeekCommune) %>% set_names(list_depts),
epicurve_by_week_inst = map(data, PlotHistWeekInst) %>% set_names(list_depts),
## proportion plots
pie_cases_by_commune = map(data_pie, PlotPie, colour_scheme = 'RdBu', key = 'commune') %>% set_names(list_depts),
bar_cases_by_commune = map(data_pie, PlotBar, colour_scheme = 'RdBu', facet_var = 'commune') %>% set_names(list_depts),
## map
map = map(data_map, MakeMapAR) %>% set_names(list_depts)
)
View(df_nested)
save.image("~/OneDrive/who/projects/2016_haiti/ws.RData")
df_nested
