pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
list_dat
tmp <- WrangleDataPopAR(list_dat)
WrangleDataPopAR <- function(data = NULL) {
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx', sheet = df_commune_sheets$sheet[df_commune_sheets$commune == names(data)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat)
browser()
WrangleDataPopAR <- function(data = NULL) {
browser()
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx', sheet = df_commune_sheets$sheet[df_commune_sheets$commune == names(data)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat)
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
df_commune_sheets
pop <-
read_excel('data/population.xlsx', sheet = df_commune_sheets$sheet[df_commune_sheets$commune == names(data)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
pop
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
data
tmp <- WrangleDataPopAR(list_dat[[1]])
list_dat[[1]]
list_dat[[1]] %>% names
list_dat
WrangleDataPopAR <- function(data = NULL) {
browser()
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx', sheet = df_commune_sheets$sheet[df_commune_sheets$commune == names(data)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat[[1]])
tmp <- map(list_dat, WrangleDataPopAR)
list_dat
tmp <- map(list_dat, WrangleDataPopAR)
data
data %>% names
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
WrangleDataPopAR <- function(data = NULL, sheet = NULL) {
browser()
# df_commune_sheets <-
#   data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx',
sheet = sheet,
# sheet = df_commune_sheets$sheet[df_commune_sheets$commune == names(data)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat[[1]], 'DSGA')
df_commune_sheets
tmp <- WrangleDataPopAR(list_dat[[1]], df_commune_sheets)
sheet
tmp <- map(list_dat, WrangleDataPopAR, df_commune_sheets)
data
sheet
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_db_paths <- dir('data', full.names = TRUE)
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_depts <- 'DSGA'
list_dat <- map(list_depts, WrangleData) %>% set_names(list_depts)
list_dat
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_dat <- map(list_depts, WrangleData) %>% set_names(list_depts)
list_dat
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
WrangleDataPopAR <- function(data = NULL) {
browser()
# df_commune_sheets <-
#   data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == data$dept],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat[[1]])
tmp <- WrangleDataPopAR(list_dat[[1]])
read_excel('data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == data$dept],
skip = 4)
df_commune_sheets$sheet[df_commune_sheets$commune == data$dept]
data$dept
data$dept %>% unique()
WrangleDataPopAR <- function(data = NULL) {
browser()
# df_commune_sheets <-
#   data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
pop <-
read_excel('data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
dat <-
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(pop, by = 'commune') %>%
mutate(ar = cases/pop*10000)
tmp <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(dat, by = c('NAME_3' = 'commune'))
return(tmp)
}
tmp <- WrangleDataPopAR(list_dat[[1]])
pop
dat
tmp
WrangleDataPopAR <- function(data = NULL) {
browser()
# df_commune_sheets <-
#   data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
# pop <-
#   read_excel('data/population.xlsx',
#              sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
#              skip = 4) %>%
#   select(c(1, 3)) %>%
#   set_names(c('commune', 'pop')) %>%
#   filter(str_detect(commune, 'Commune')) %>%
#   mutate(
#     commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
#     commune = str_replace_all(commune, "é", 'e'),
#     commune = str_replace_all(commune, "Irois", 'Les Irois'),
#     pop = str_replace_all(pop, ' ', ''),
#     pop = as.numeric(pop)
#   )
#
# dat <-
#   data %>%
#   mutate(commune = str_replace_all(commune, "-", ' ')) %>%
#   group_by(commune) %>%
#   summarise(cases = sum(n)) %>%
#   inner_join(pop, by = 'commune') %>%
#   mutate(ar = cases/pop*10000)
#
# tmp <-
#   df_map_haiti %>%
#   tbl_df %>%
#   mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
#   inner_join(dat, by = c('NAME_3' = 'commune'))
dat <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(
read_excel('data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
tmp <- WrangleDataPopAR(list_dat[[1]])
dat
list_dat
WrangleDataPopAR <- function(data = NULL) {
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
dat <-
df_map_haiti %>%
tbl_df %>%
mutate(NAME_3 = str_replace_all(NAME_3, "é", 'e')) %>%
inner_join(
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "[1-9].*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é", 'e'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune') %>%
mutate(ar = cases/pop*10000),
by = c('NAME_3' = 'commune'))
return(dat)
}
tmp <- map(list_dat, WrangleDataPopAR)
tmp
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map_DSGA <- map(list_dat, WrangleDataMapPopAR)
df_map_DSGA
ggplot(df_map_DSGA) +
geom_polygon(aes(long, lat, group = group, fill = ar), colour = 'white', size = .2) +
coord_equal() +
ggthemes::theme_tufte(base_family = 'Palatino') +
scale_fill_gradient(name = '# cases', low = 'lightyellow', high = 'darkred', labels = scales::comma) +
# viridis::scale_fill_viridis(labels = scales::comma) +
theme(
legend.title = element_text(size = 6, face = 'bold'),
legend.text = element_text(size = 5),
axis.title = element_text(size = 6, face = 'bold'),
axis.text = element_text(size = 5),
axis.ticks = element_blank()
) +
labs(x = 'Longitude', y = 'Latitude')
df_map_DSGA
df_map_DSGA[[dept]]
ggplot(df_map_DSGA[[dept]]) +
geom_polygon(aes(long, lat, group = group, fill = ar), colour = 'white', size = .2) +
coord_equal() +
ggthemes::theme_tufte(base_family = 'Palatino') +
scale_fill_gradient(name = '# cases', low = 'lightyellow', high = 'darkred', labels = scales::comma) +
# viridis::scale_fill_viridis(labels = scales::comma) +
theme(
legend.title = element_text(size = 6, face = 'bold'),
legend.text = element_text(size = 5),
axis.title = element_text(size = 6, face = 'bold'),
axis.text = element_text(size = 5),
axis.ticks = element_blank()
) +
labs(x = 'Longitude', y = 'Latitude')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
MakeMapAR(df_map_DSGA[[1]])
map(df_map_DSGA, MakeMapAR)
df_map <- map(list_dat, WrangleDataMapPopAR)
map(df_map, MakeMapAR)
list_df_map <- map(list_dat, WrangleDataMapPopAR)
list_map <- map(list_df_map, MakeMapAR)
list_map
map(list_dat, MakeTable)
map(list_dat, PlotHistDayInst)
map(list_dat, PlotHistWeekCommune)
map(list_dat, PlotHistDay)
map(list_depts, WrangleData)
map(list_depts, WrangleData) %>% set_names(list_depts)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
MakeMapAR <- function(data){
ggplot(data) +
geom_polygon(aes(long, lat, group = group, fill = ar), colour = 'white', size = .2) +
coord_equal() +
ggthemes::theme_tufte(base_family = 'Palatino') +
scale_fill_gradient(name = "Taux d'attaque (per 10,000)", low = 'lightyellow', high = 'darkred', labels = scales::comma) +
# viridis::scale_fill_viridis(labels = scales::comma) +
theme(
legend.title = element_text(size = 6, face = 'bold'),
legend.text = element_text(size = 5),
axis.title = element_text(size = 6, face = 'bold'),
axis.text = element_text(size = 5),
axis.ticks = element_blank()
) +
labs(x = 'Longitude', y = 'Latitude')
}
map(df_map, MakeMapAR)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_map, MakeMapAR)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_map, MakeMapAR)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_db_paths <- dir('data', full.names = TRUE)
list_depts <-
list_db_paths[str_detect(list_db_paths, 'Surveillance Cholera_2015_2016')] %>%
str_replace_all(c('data/' = '', '[-_]Surveillance Cholera.*' = ''))
list_dat <- map(list_depts, WrangleData) %>% set_names(list_depts)
list_hist_day <- map(list_dat, PlotHistDay) %>% set_names(list_depts)
list_hist_day_inst <- map(list_dat, PlotHistDayInst) %>% set_names(list_depts)
list_hist_week <- map(list_dat, PlotHistWeek) %>% set_names(list_depts)
list_hist_week_inst <- map(list_dat, PlotHistWeekInst) %>% set_names(list_depts)
list_table <- map(list_dat, MakeTable) %>% set_names(list_depts)
list_table
list_hist_week_inst
list_hist_week
list_hist_day_inst
list_hist_day
df_map <- map(list_dat, WrangleDataMapPopAR)
df_map
list_map <- map(df_map, MakeMapAR)
list_map
df_map
df_map$DSS
df_map$DSS %>% glimpse()
?`magrittr-package`
install.packages("magick")
library("magick", lib.loc="~/MEGA/public health/r libs")
getwd
getwd()
logo <- image_read('figure/logo_paho.jpg')
logo
image_scale(logo, "200x200")
image_read('figure/logo_paho.jpg') %>%
image_scale(logo, "400x400")
logo <-
image_read('figure/logo_paho.jpg') %>%
image_scale(logo, "400x400")
logo <-
image_read('figure/logo_paho.jpg') %>%
image_scale("400x400")
logo
image_read('figure/logo_paho.jpg') %>%
image_scale("400x400") %>%
image_write('test')
logo <-
image_read('figure/logo_paho.jpg') %>%
image_scale("400x400") %>%
image_write('figure/test.png')
image_read('figure/logo_paho.jpg') %>%
image_trim()
logo <-
image_read('figure/logo_paho.jpg') %>%
image_trim %>%
image_scale("400x400") %>%
image_write('figure/test.png')
image_read('figure/logo_paho.jpg') %>%
image_trim %>%
image_scale("400x400") %>%
image_write('figure/paho.png')
image_read('figure/logo_mspp.png') %>%
image_trim %>%
image_scale("400x400") %>%
image_write('figure/mspp.png')
image_read('figure/logo_mspp.png') %>%
image_trim
image_read('figure/logo_mspp.png') %>%
image_trim %>%
image_scale("400x400")
image_read('figure/logo_mspp.png')
