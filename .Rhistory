'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2)
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2)
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
library(rgeos)
library(maptools)
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â| A ", 'a'),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â| A ", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â| A ", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â| A ", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp1 <-
df_map_haiti %>%
mutate(
NAME_3 = str_replace_all(NAME_3, "-", ' '),
NAME_3 = str_replace_all(NAME_3, "é|è", 'e'),
NAME_3 = str_replace_all(NAME_3, "à|â", 'a'),
NAME_3 = str_replace_all(NAME_3, " A ", ' a '),
NAME_3 = str_replace_all(NAME_3, "ô", 'o'),
NAME_3 = str_replace_all(NAME_3, "Saint", 'St.')
) %>%
filter(NAME_1 %in% 'Sud') %>%
select(NAME_3) %>%
unique %>%
arrange(NAME_3)
tmp2 <-
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
) %>% arrange(commune) %>% select(commune) %>% c %>% tbl_df
anti_join(tmp1, tmp2, by = c('NAME_3' = 'commune'))
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â| A ", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
list_map <- map(df_map, MakeMapAR)
list_map
df_map
df_map$NAme_3
df_map[[1]]$NAME_3
df_map[[1]]$NAME_3 %>% unique()
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â| A ", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â| A ", 'a'),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
list_map <- map(df_map, MakeMapAR)
list_map
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
library(rgeos)
library(maptools)
# maptools::gpclibPermit()
map_haiti <- rgdal::readOGR(dsn = 'map', layer = 'HTI_adm3')
map_haiti@data$id <- rownames(map_haiti@data)
df_map_haiti <-
fortify(map_haiti, region = 'id') %>%
inner_join(map_haiti@data, by = 'id') %>%
tbl_df
df_commune_sheets <-
data_frame(commune = c('DSGA', 'DSS'), sheet = c('Dept_Grand anse', 'Dept_Sud'))
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n))
?inner_join
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
)
data %>%
mutate(commune = str_replace_all(commune, "-", ' ')) %>%
group_by(commune) %>%
summarise(cases = sum(n)) %>%
inner_join(
read_excel(
'data/population.xlsx',
sheet = df_commune_sheets$sheet[df_commune_sheets$commune == unique(data$dept)],
skip = 4) %>%
select(c(1, 3)) %>%
set_names(c('commune', 'pop')) %>%
filter(str_detect(commune, 'Commune')) %>%
mutate(
commune = str_replace_all(commune, "-", ' '),
commune = str_replace_all(commune, ".*Commune (des|d'|de)", '') %>% str_trim(),
commune = str_replace_all(commune, "é|è", 'e'),
commune = str_replace_all(commune, "à|â", 'a'),
commune = str_replace_all(commune, " A ", ' a '),
commune = str_replace_all(commune, "ô", 'o'),
commune = str_replace_all(commune, "Cayes", 'Les Cayes'),
commune = str_replace_all(commune, "Irois", 'Les Irois'),
commune = str_replace_all(commune, "Anglais", 'Les Anglais'),
commune = str_replace_all(commune, "l'Île", 'Ile'),
commune = str_replace_all(commune, "Saint", 'St.'),
pop = str_replace_all(pop, ' ', ''),
pop = as.numeric(pop)
),
by = 'commune')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
source('~/OneDrive/who/projects/2016_haiti/functions.R')
df_map <- map(list_dat, WrangleDataMapPopAR)
list_map <- map(df_map, MakeMapAR)
list_map
?geom_polygon
source('~/OneDrive/who/projects/2016_haiti/functions.R')
list_map <- map(df_map, MakeMapAR)
map(df_map, MakeMapAR)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_map, MakeMapAR)
source('~/OneDrive/who/projects/2016_haiti/functions.R')
map(df_map, MakeMapAR)
PlotPie <- function(data, key = 'key', value = 'value', colscheme = 'Blues', title = NULL, retain.order = F){
tmp <-
eval(substitute(
data %>%
group_by_(key) %>%
summarise(value_sum = round(sum(colname, na.rm = T))),
list(colname = as.symbol(value)))) %>%
mutate(prop = round(value_sum/sum(value_sum) * 100, 1))
tmp <- if (retain.order == T) tmp else arrange(tmp, desc(prop))
if (nrow(tmp) > 10) {
tmp1 <- tmp[1:7, ]
tmp2 <-
tmp[8:nrow(tmp), ] %>%
summarise(value_sum = sum(value_sum)) %>%
mutate(prop = round(value_sum/sum(tmp$value_sum) * 100, 1))
tmp1[8, 1] <- 'Other'
tmp1[8, 2:3] <- tmp2
tmp <- mutate(tmp1, pos = cumsum(prop) - 0.5 * prop)
tmp[[key]] <-
factor(tmp[[key]],
levels = c(tmp[[key]][nrow(tmp)],
tmp[[key]][-nrow(tmp)][order(tmp$prop[-nrow(tmp)])]))
} else {
tmp <- mutate(tmp, pos = cumsum(prop) - 0.5 * prop)
tmp[[key]] <- factor(tmp[[key]], levels = tmp[[key]])
}
tmp$charLab <- as.character(tmp[[key]])
TwoLines <- function(x) {
if (nchar(x) > 10) {
x <- gsub(' or ', '/\n', x)
x <- gsub(' ', '\n', x)
} else x
return(x)
}
tmp$charLab <- sapply(as.list(tmp$charLab), TwoLines)
for(i in 1:nrow(tmp)) tmp$label[i] <- paste0(tmp[i, 'charLab'], '\n', tmp[i, 'prop'], '%')
tmp[[key]] <- factor(tmp[[key]], levels = tmp[[key]])
ggplot(tmp, aes_string(x = 1, y = 'prop', fill = key)) +
geom_bar(width = 1, stat = 'identity', colour = 'white') +
#       scale_x_discrete(limits = c(0, 1)) +
#       geom_text(aes(x = 1.75, y = tmp$pos, label = tmp$label), colour = 'black') +
# scale_y_continuous(breaks = tmp$pos, labels = tmp$label) +
scale_y_continuous(breaks = tmp$pos, labels = NULL) +
scale_fill_manual(values = colScheme(colscheme)(nrow(tmp))) +
coord_polar('y', start = 0) +
theme_bw() +
theme(panel.border = element_blank(),
plot.title = element_text(size = 12, face = 'bold', color = 'darkblue'),
legend.key = element_blank(),
legend.position = '',
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid  = element_blank()) +
labs(x = '', y = '', title = ifelse(title %in% NULL, NULL, paste0(title)))
}
PlotPie(tmp)
library(readxl)
library(stringr)
library(dplyr)
library(magrittr)
library(tidyr)
library(purrr)
library(lubridate)
library(ggplot2)
# library(viridis)
library(extrafont)
